{"version":3,"sources":["component/Mola.js"],"names":["MolaNode","props","Type","type","conf","children","propTypes","func","isRequired","object","Mola","resolveTreeNode","version","renderTreeNode","key","level","control","traverse","root","index","filter","length","map","child","render","components","shape","id","oneOfType","number","string","arrayOf","defaultProps"],"mappings":";;;;;;;;;;;;;;;;YAgBgBA,Q,GAAAA,Q;;;;AARhB;;AAEA;;;;;;AAVA;;;;;AAgBO,aAASA,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,YAGlBC,IAHkB,GAMxBD,KANwB,CAGxBE,IAHwB;AAAA,YAIxBC,IAJwB,GAMxBH,KANwB,CAIxBG,IAJwB;AAAA,YAKxBC,QALwB,GAMxBJ,KANwB,CAKxBI,QALwB;;;AAQ5B,eAAO;AAAC,gBAAD;AAAUD,gBAAV;AAAiBC;AAAjB,SAAP;AAEH;;AAEDL,aAASM,SAAT,GAAqB;AACjBH,cAAM,iBAAUI,IAAV,CAAeC,UADJ;AAEjBJ,cAAM,iBAAUK;AAFC,KAArB;;QAKqBC,I;;;;;;;;uBAEjBC,e,4BAAgBR,I,EAAMS,O,EAAS;AAC3B,mBAAO,2BAAaT,IAAb,EAAmBS,OAAnB,CAAP;AACH,S;;uBAEDC,c,2BAAeV,I,EAAMC,I,EAAMC,Q,EAAUS,G,EAAgB;AAAA,gBAAXC,KAAW,uEAAH,CAAG;;;AAEjD,gBAAIf,WAAW,KAAKC,KAAL,CAAWe,OAA1B;;AAEA,mBACI;AAAC,wBAAD;AAAA;AACI,0BAAMZ,IADV;AAEI,0BAAMD,IAFV;AAGI,yBAAQY,KAAR,SAAiBD,GAHrB;AAIKT;AAJL,aADJ;AASH,S;;uBAEDY,Q,qBAASC,I,EAAMC,K,EAAOJ,K,EAAOK,M,EAAQ;AAAA;;AAAA,gBAG7BjB,IAH6B,GAO7Be,IAP6B,CAG7Bf,IAH6B;AAAA,gBAI7BS,OAJ6B,GAO7BM,IAP6B,CAI7BN,OAJ6B;AAAA,gBAK7BP,QAL6B,GAO7Ba,IAP6B,CAK7Bb,QAL6B;AAAA,gBAM1BJ,KAN0B,wCAO7BiB,IAP6B;;;AASjC,gBAAIE,UAAU,CAACA,OAAOF,IAAP,EAAaC,KAAb,EAAoBJ,KAApB,CAAf,EAA2C;AACvC,uBAAO,IAAP;AACH;;AAEDV,uBAAWA,YAAYA,SAASgB,MAArB,GACLhB,SACGiB,GADH,CAEM,UAACC,KAAD,EAAQJ,KAAR;AAAA,uBAAkB,OAAKF,QAAL,CACdM,KADc,EAEdJ,KAFc,EAGdJ,QAAQ,CAHM,EAIdK,MAJc,CAAlB;AAAA,aAFN,CADK,GAUL,IAVN;;AAYA,mBAAO,KAAKP,cAAL,CACH,KAAKF,eAAL,CAAqBR,IAArB,EAA2BS,OAA3B,CADG,EAEHX,KAFG,EAGHI,QAHG,EAIHc,KAJG,EAKHJ,KALG,EAMHK,MANG,CAAP;AASH,S;;uBAEDI,M,qBAAS;AACL,mBAAO,KAAKP,QAAL,CAAc,KAAKhB,KAAL,CAAWwB,UAAzB,EAAqC,CAArC,EAAwC,CAAxC,CAAP;AACH,S;;;;;yBA3DgBf,I;;;AA+DrBA,SAAKJ,SAAL,GAAiB;AACbmB,oBAAY,iBAAUC,KAAV,CAAgB;AACxBC,gBAAI,iBAAUC,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,MAA7B,CAApB,EAA0DtB,UADtC;AAExBH,sBAAU,iBAAU0B,OAAV,CAAkB,iBAAUtB,MAA5B;AAFc,SAAhB,CADC;AAKbO,iBAAS,iBAAUT,IAAV,CAAeC;AALX,KAAjB;;AAQAE,SAAKsB,YAAL,GAAoB;AAChBhB,iBAAShB;AADO,KAApB","file":"Mola.js","sourcesContent":["/**\n * @file mola\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport {getComponent} from '../util/factory';\n\n/* eslint-disable fecs-prefer-class */\n\n/**\n * MolaNode\n *\n * @class\n * @param {Object} props 属性\n */\nexport function MolaNode(props) {\n\n    let {\n        type: Type,\n        conf,\n        children\n    } = props;\n\n    return <Type {...conf}>{children}</Type>;\n\n}\n\nMolaNode.propTypes = {\n    type: PropTypes.func.isRequired,\n    conf: PropTypes.object\n};\n\nexport default class Mola extends Component {\n\n    resolveTreeNode(type, version) {\n        return getComponent(type, version);\n    }\n\n    renderTreeNode(type, conf, children, key, level = 0) {\n\n        let MolaNode = this.props.control;\n\n        return (\n            <MolaNode\n                conf={conf}\n                type={type}\n                key={`${level}-${key}`}>\n                {children}\n            </MolaNode>\n        );\n\n    }\n\n    traverse(root, index, level, filter) {\n\n        let {\n            type,\n            version,\n            children,\n            ...props\n        } = root;\n\n        if (filter && !filter(root, index, level)) {\n            return null;\n        }\n\n        children = children && children.length\n            ? children\n                .map(\n                    (child, index) => this.traverse(\n                        child,\n                        index,\n                        level + 1,\n                        filter\n                    )\n                )\n            : null;\n\n        return this.renderTreeNode(\n            this.resolveTreeNode(type, version),\n            props,\n            children,\n            index,\n            level,\n            filter\n        );\n\n    }\n\n    render() {\n        return this.traverse(this.props.components, 0, 0);\n    }\n\n}\n\nMola.propTypes = {\n    components: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n        children: PropTypes.arrayOf(PropTypes.object)\n    }),\n    control: PropTypes.func.isRequired\n};\n\nMola.defaultProps = {\n    control: MolaNode\n};\n"]}